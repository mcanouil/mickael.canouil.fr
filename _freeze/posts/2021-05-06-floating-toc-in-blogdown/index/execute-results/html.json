{
  "hash": "e9c4ca5789c56df37cd789c96b4674ee",
  "result": {
    "markdown": "---\ntitle: \"Add a Floating Table of Contents in `blogdown`\"\ndescription: |\n  How to have a table of contents (TOC) on either the left or the right side of a post?  \n  I have an answer!\ndate: \"2021-05-06\"\ncategories: [R, blogdown, rmarkdown, HUGO, Website]\nimage: featured.png\nimage-alt: |\n  Screenshot of the `blogdown` blog post 'Add a Floating Table of Contents in `blogdown`' showing a table of content on the right.\nknitr:\n  opts_chunk: \n    width: 110\n    comment: \"\"\n    fig-width: 11.5\n    fig-height: 5.75\n    dev: \"svglite\"\n    dev.args:\n      web_fonts: \"https://fonts.googleapis.com/css?family=Alegreya+Sans\"\n---\n\n\n\n\n\n\n\n\n## Welcome!\n\nWelcome to my very first blog post (_i.e._,&nbsp;I do not count [ggpacman](https://mickael.canouil.fr/post/ggpacman/)).\n\nThe focus of this post is on `blogdown` ([github.com/rstudio/blogdown](https://github.com/rstudio/blogdown)), in particular on how to have a table of contents (TOC) on either the left or the right side of a post to ease the navigation through a long post.  \nIn the past few weeks, I have been slowly getting my head around [`blogdown`](https://github.com/rstudio/blogdown) and [HUGO](https://gohugo.io/), to finally published this website about a week ago.  \nOne of the latest tweak I had to figure out was: how to get a floating TOC.  \nGetting a TOC is quite easy with an Rmarkdown, thus it should be the same in `blogdown`.\n\n```markdown\n---\noutput:\n  rmarkdown::html_document:\n    toc: true\n---\n```\n\nFor the remaining of this post, I will use the \"[wowchemy/starter-hugo-academic](https://github.com/wowchemy/starter-hugo-academic)\" HUGO theme within a new default `blogdown` website created with the following function call.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblogdown::new_site(theme = \"wowchemy/starter-hugo-academic\")\n```\n:::\n\n\n## TL;DR\n\nWithin a `blogdown` installation based on the \"[wowchemy/starter-hugo-academic](https://github.com/wowchemy/starter-hugo-academic)\" HUGO theme:\n\n1. Create `<root>/layouts/_default/single.html`.\n\n   ::: {.cell}\n   \n   ```{.r .cell-code}\n   writeLines(\n     text = c(\n       '{{- define \"main\" -}}',\n       '<article class=\"article\">',\n       '  {{ partial \"page_header\" . }}',\n       '  <div class=\"article-container\">',\n       '    <div class=\"row\">',\n       '      <div class=\"col-12 col-lg-9 article-style\">',\n       '        {{ .Content }}',\n       '      </div>',\n       '      <div class=\"col-12 col-lg-3 docs-toc\">',\n       '        <ul class=\"nav toc-top\">',\n       '          <li>',\n       '            <a href=\"#\" id=\"back_to_top\" class=\"docs-toc-title\">',\n       '              {{ i18n \"on_this_page\" }}',\n       '            </a>',\n       '          </li>',\n       '        </ul>',\n       '        {{ .TableOfContents }}',\n       '      </div>',\n       '    </div>',\n       '    {{ partial \"page_footer\" . }}',\n       '  </div>',\n       '</article>',\n       '{{- end -}}'\n     ), \n     con = \"layouts/_default/single.html\"\n   )\n   ```\n   :::\n\n2. Add to your `<root>/.Rprofile`.\n\n   ::: {.cell}\n   \n   ```{.r .cell-code}\n   options(blogdown.method = \"markdown\")\n   ```\n   :::\n\n3. Write your posts in an `Rmd` or `Rmarkdown` file (_it Makes no difference now_) with the following in the YAML header.\n   ```yaml\n   output:\n     blogdown::html_page:\n       toc: true\n   ```\n4. You are all set!\n\n_Note_: To a more complete setup workflow for `blogdown`, I recommend to have a look at [Alison Hill](https://alison.rbind.io/)'s blog post: \"[Up & Running with Blogdown in 2021](https://alison.rbind.io/post/new-year-new-blogdown/)\".\n\n## Default Rmarkdown Post\n\nOnce installed, several default posts are available, including simple markdown file, Jupyter notebook file and Rmarkdown file.  \nMost of this post will focus on the Rmarkdown file with `.Rmd` extension.\n\nThe default Rmarkdown file can be found at `content/post/2020-12-01-r-rmarkdown/index.en.Rmd` from the root directory of the website.\n\n\n````md\n---\ntitle: \"Hello R Markdown\"\nauthor: \"Frida Gomam\"\ndate: 2020-12-01T21:13:14-05:00\ncategories: [\"R\"]\ntags: [\"R Markdown\", \"plot\", \"regression\"]\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(collapse = TRUE)\n```\n\n## R Markdown\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nYou can embed an R code chunk like this:\n\n```{r cars}\nsummary(cars)\nfit <- lm(dist ~ speed, data = cars)\nfit\n```\n\n## Including Plots\n\nYou can also embed plots. See Figure \\@ref(fig:pie) for example:\n\n```{r pie, fig.cap='A fancy pie chart.', tidy=FALSE}\npar(mar = c(0, 1, 0, 1))\npie(\n  c(280, 60, 20),\n  c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),\n  col = c('#0292D8', '#F7EA39', '#C4B632'),\n  init.angle = -50, border = NA\n)\n```\n````\n\n\nTo be fair, the above document is not exactly the default Rmarkdown file.  \nIn fact, I decreased the headings level, or increase the number of `#`, by one.  \nThe reason for this small modification comes from the default configuration of HUGO within the `config.yaml` file.\n\n\n````md\n...\nmarkup:\n  defaultMarkdownHandler: goldmark\n  goldmark:\n    renderer:\n      unsafe: true\n  highlight:\n    codeFences: false\n  tableOfContents:\n    startLevel: 2\n    endLevel: 3\n...\n````\n\n\nAs you can see, the TOC is defined to include from level 2 to level 3, so by default, the changes we are going to make would not have any effect for this particular document which only contains level 1 headings.\n\nPosts and any other Rmarkdown contents are rendered with `rmarkdown::render_site()`, hence, for our default Rmarkdown (`content/post/2020-12-01-r-rmarkdown/index.en.Rmd`), the rendering is done with `rmarkdown::render_site('content/post/2020-12-01-r-rmarkdown/index.en.Rmd')`.\n\n![](assets/rmd_default_post.png)\n\n_Note_: In this case, `rmarkdown::render_site()` produces a HTML file: `index.en.html`.\n\n## Default with a TOC\n\nFirst, let's edit the default `index.en.Rmd` file by adding three lines. in the YAML header as we would have done in a regular `rmarkdown::html_document()` to add a TOC.  \nFor a `blogdown` post, the output format is `blogdown::html_page()`.  \nThis output format produces a headless HTML file (_i.e._,&nbsp;there is no need for header/body part, since the file is going to be included as a part of another HTML file).\n\n```yaml\noutput:\n  blogdown::html_page:\n    toc: true\n```\n\nWith this addition, the `index.en.Rmd` looks like this (_not that different, isn't it?!_).\n\n\n````md\n---\ntitle: \"Hello R Markdown\"\nauthor: \"Frida Gomam\"\ndate: 2020-12-01T21:13:14-05:00\ncategories: [\"R\"]\ntags: [\"R Markdown\", \"plot\", \"regression\"]\noutput:\n  blogdown::html_page:\n    toc: true\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(collapse = TRUE)\n```\n\n## R Markdown\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nYou can embed an R code chunk like this:\n\n```{r cars}\nsummary(cars)\nfit <- lm(dist ~ speed, data = cars)\nfit\n```\n\n## Including Plots\n\nYou can also embed plots. See Figure \\@ref(fig:pie) for example:\n\n```{r pie, fig.cap='A fancy pie chart.', tidy=FALSE}\npar(mar = c(0, 1, 0, 1))\npie(\n  c(280, 60, 20),\n  c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),\n  col = c('#0292D8', '#F7EA39', '#C4B632'),\n  init.angle = -50, border = NA\n)\n```\n````\n\n\nSince, we changed the YAML header, we need to render again, with `rmarkdown::render_site()`, the HTML file from `index.en.Rmd`.\n\n![](assets/rmd_default_toc_post.png)\n\nNow we have a TOC, but it sticks to the top.  \nAt this stage, we did all we could in the Rmarkdown file `index.en.Rmd`.\n\n## Modify the Layout\n\nBecause everything that relates to the structure of the pages on the website are defined in HTML template files stored in a `layouts` directory, the answer to our \"problem\" should be there.  \nAnd that is the case, as stated in a issue opened on GitHub ([wowchemy/wowchemy-hugo-themes #1520](https://github.com/wowchemy/wowchemy-hugo-themes/issues/1520)). \nMore precisely in [@CharlieLeee](https://github.com/wowchemy/wowchemy-hugo-themes/issues/1520#issuecomment-601982609)'s comment.\n\nAs mentioned in the comment, we need to modify a particular file, namely `layouts/_default/single.html`, but what is inside this `layouts/_default/single.html` file from the \"[wowchemy/starter-hugo-academic](https://github.com/wowchemy/starter-hugo-academic)\" theme?  \nIn a default installation, the file is located in the following path \n`themes/github.com/wowchemy/wowchemy-hugo-themes/wowchemy/layouts/_default/single.html` and it includes the following HTML/code.\n\n```html\n{{- define \"main\" -}}\n\n<article class=\"article\">\n\n  {{ partial \"page_header\" . }}\n\n  <div class=\"article-container\">\n\n    <div class=\"article-style\">\n      {{ .Content }}\n    </div>\n\n    {{ partial \"page_footer\" . }}\n\n  </div>\n</article>\n\n{{- end -}}\n```\n\n_Note_: Have a look at [HUGO website](https://gohugo.io/templates/introduction/) for the HUDO templating syntax.\n\nWe do not want to modify any of the files in the `themes` directory, so we will create a new file at the root directory of our `blogdown` website (`layouts/_default/single.html`).  \nI am not going to use the code proposed in [@CharlieLeee](https://github.com/wowchemy/wowchemy-hugo-themes/issues/1520#issuecomment-601982609)'s comment, but instead a slight modification to make the TOC a bit more responsive.\n\nIn this case, the TOC will use three out of the twelve columns in a wide screen (_i.e._,&nbsp;grid layout).\nOn a smaller screen, the TOC will occupy twelve columns (_i.e._,&nbsp;equivalent to the css `width: 100%;`) and will be wrapped after the contents, hence it will be under.\n\nTo note and for later, in the code chunk below:\n\n- `.Content` is a HUGO variable which contains the content of the post.\n- `.TableOfContents` is a HUGO variable which contains the TOC of the post.\n\n```html\n{{- define \"main\" -}}\n\n<article class=\"article\">\n\n  {{ partial \"page_header\" . }}\n\n  <div class=\"article-container\">\n\n    <div class=\"row\">\n      \n      <div class=\"col-12 col-lg-9 article-style\">\n        {{ .Content }} <!-- HUGO variable which contains the content of the post -->\n      </div>\n      \n      <div class=\"col-12 col-lg-3 docs-toc\">\n        <ul class=\"nav toc-top\">\n          <li>\n            <a href=\"#\" id=\"back_to_top\" class=\"docs-toc-title\">\n              {{ i18n \"on_this_page\" }}\n            </a>\n          </li>\n        </ul>\n    \n        {{ .TableOfContents }} <!-- HUGO variable which contains the TOC of the post -->\n        \n      </div>\n    </div>\n\n    {{ partial \"page_footer\" . }}\n\n  </div>\n</article>\n\n{{- end -}}\n```\n\nAgain, we need to render the `index.en.Rmd` file, or to restart the website (`blogdown::stop_server()`/`blogdown::serve_site()`) to ensure all modifications are taken into account.\n\n![](assets/rmd_default_toc_single_post.png)\n\nNot quite, what we could have expected ...\n\nThe TOC from the Rmarkdown (HTML) file is still at the top, but there is a \"Contents\" on the right side (as define in `layouts/_default/single.html`).  \nThis \"Contents\" comes from our modified layout file and it is not included in a HUGO variable.  \nThis TOC header is a hypertext reference to the top of the current page.\n\n```html\n<ul class=\"nav toc-top\">\n  <li>\n    <a href=\"#\" id=\"back_to_top\" class=\"docs-toc-title\">\n      {{ i18n \"on_this_page\" }}\n    </a>\n  </li>\n</ul>\n```\n\nOur layout seems to \"work\", but somehow, does not include the TOC of our HTML file generated from the `index.en.Rmd` file.\n\nLet's have a look at another post in plain markdown from our `blogdown` website.\n\n- Before the modifications of the layout  \n  ![](assets/markdown_default_before.png)\n\n- After the modifications of the layout  \n  ![](assets/markdown_default_after.png)\n\nIt's looking great for the markdown post!\n\nIn conclusion and since we modified the page layout, the issue no longer seems to be on the HUGO side.\n\nIf we take a look at the HTML file produced by `rmarkdown::render_site()`.\n\n\n````md\n---\ntitle: \"Hello R Markdown\"\nauthor: \"Frida Gomam\"\ndate: 2020-12-01T21:13:14-05:00\ncategories: [\"R\"]\ntags: [\"R Markdown\", \"plot\", \"regression\"]\noutput:\n  blogdown::html_page:\n    toc: true\n---\n\n<script src=\"{{< blogdown/postref >}}index.en_files/header-attrs/header-attrs.js\"></script>\n\n<div id=\"TOC\">\n<ul>\n<li><a href=\"#r-markdown\">R Markdown</a></li>\n<li><a href=\"#including-plots\">Including Plots</a></li>\n</ul>\n</div>\n\n<div id=\"r-markdown\" class=\"section level2\">\n<h2>R Markdown</h2>\n<p>This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <a href=\"http://rmarkdown.rstudio.com\" class=\"uri\">http://rmarkdown.rstudio.com</a>.</p>\n<p>You can embed an R code chunk like this:</p>\n<pre class=\"r\"><code>summary(cars)\n##      speed           dist       \n##  Min.   : 4.0   Min.   :  2.00  \n##  1st Qu.:12.0   1st Qu.: 26.00  \n##  Median :15.0   Median : 36.00  \n##  Mean   :15.4   Mean   : 42.98  \n##  3rd Qu.:19.0   3rd Qu.: 56.00  \n##  Max.   :25.0   Max.   :120.00\nfit &lt;- lm(dist ~ speed, data = cars)\nfit\n## \n## Call:\n## lm(formula = dist ~ speed, data = cars)\n## \n## Coefficients:\n## (Intercept)        speed  \n##     -17.579        3.932</code></pre>\n</div>\n<div id=\"including-plots\" class=\"section level2\">\n<h2>Including Plots</h2>\n<p>You can also embed plots. See Figure <a href=\"#fig:pie\">1</a> for example:</p>\n<pre class=\"r\"><code>par(mar = c(0, 1, 0, 1))\npie(\n  c(280, 60, 20),\n  c(&#39;Sky&#39;, &#39;Sunny side of pyramid&#39;, &#39;Shady side of pyramid&#39;),\n  col = c(&#39;#0292D8&#39;, &#39;#F7EA39&#39;, &#39;#C4B632&#39;),\n  init.angle = -50, border = NA\n)</code></pre>\n<div class=\"figure\"><span id=\"fig:pie\"></span>\n<img src=\"{{< blogdown/postref >}}index.en_files/figure-html/pie-1.png\" alt=\"A fancy pie chart.\" width=\"672\" />\n<p class=\"caption\">\nFigure 1: A fancy pie chart.\n</p>\n</div>\n</div>\n````\n\n\nTo narrow down where to look a little bit, I remove all parts not related to the TOC generated in the HTML file.\n\n\n````md\n<div id=\"TOC\">\n<ul>\n<li><a href=\"#r-markdown\">R Markdown</a></li>\n<li><a href=\"#including-plots\">Including Plots</a></li>\n</ul>\n</div>\n````\n\n\nIn this part, we are interested in the `div` which includes the TOC and we can see that the `id` is `\"TOC\"`.\n\nYou might not know and you will after reading this, but HUGO parses the headings from markdown (_i.e._,&nbsp;`#`, `##`, etc.) and stores all those headings in an HTML structure (_i.e._,&nbsp;`nav`) with `id=\"TableOfContents\"`.  \nSeems familiar?! It is the HUGO variable seen earlier, which contains the TOC.  \nTo know this, well you have to read [HUGO's documentation](https://gohugo.io/content-management/toc/).\n\nAt this point, you might not see where all this is going. \n\nLet me clarify all the information we have:\n\n- HUGO translate markdown files to HTML files.\n- HUGO has a variable/id for the TOC, named `TableOfContents`\n- We can change the layout of the HUGO theme to include TOC (if the theme does not already include it as for \"[wowchemy/starter-hugo-academic](https://github.com/wowchemy/starter-hugo-academic)\").\n  - It works on plain markdown posts.\n  - It does not on HTML posts produced from `.Rmd` files.\n    \nIn conclusion, there is something wrong with the HTML files produced from `.Rmd` files.\n\n## Fixing `.Rmd`/`.html` Posts\n\n`blogdown` provides an add-in to easily creates new post (`blogdown:::new_post_addin()`), in which you can decide what is the file format/extension you want to use.  \nYou can change the default in your `.Rprofile` with, for example `.Rmd`, as your default using `options(blogdown.ext = \".Rmd\")`.\n\nYou are probably (_as I am_) more familiar with the `Rmd` extension.\n\n- `.Rmd` produces `.html` with `rmarkdown::render_site()`.  \n  And the floating TOC is not working in that case.  \n  ![](assets/rmd_default_toc_single_post.png)\n\nLet's modify the extension to `Rmarkdown`.\n\n- `.Rmarkdown` produces `.markdown` (_basically the same as `.md`_) with `rmarkdown::render_site()`.  \n  ![](assets/rmarkdown_default_toc_single_post.png)\n\nIt works!  \nWe have a floating TOC when using `.Rmarkdown` extension, thus when we do not use pandoc to translate markdown to HTML.\n\n## I Want `Rmd`, not `Rmarkdown`!\n\nWe could only use `.Rmarkdown` file and stop right there, but what if we wanted to keep our favourite `.Rmd` extension everywhere?  \nThe solution to this is quite simple!\n\n1. In the `.Rprofile` at the root of your `blogdown` website, change the default rendering method to `\"markdown\"` using `options(blogdown.method = \"markdown\")`.\n2. Restart R.\n3. You are all set! `rmarkdown::render_site()` will only produce markdown file when used with `blogdown`.\n\n## Conclusion\n\nIf you want a floating TOC, you should not generates HTML files from your Rmarkdown files and you need to add the HUGO variable `.TableOfContents` in the layout HTML file controlling the type of content you want the floating TOC to be.\n\n_Note_: To a more complete setup workflow for `blogdown`, I recommend to have a look at [Alison Hill](https://alison.rbind.io/)'s blog post: \"[Up & Running with Blogdown in 2021](https://alison.rbind.io/post/new-year-new-blogdown/)\".\n\n## Going in Style\n\n:::{style=\"text-align:center;\"}\n![Movie poster of \"Going in Style\" (<a href = \"https://www.imdb.com/title/tt2568862/\">IMDb</a>).](assets/Going-in-Style.jpg){fig-alt=\"poster of the movie Going in Style showing from left to right Alan Arkin, Morgan Freeman, and Michael Caine.\"}\n:::\n\nBecause, the TOC has an `id` which is `TableOfContents`, you can control the style of the TOC with (s)css (_i.e._,&nbsp;`#TableOfContents`!\n\nFor example, to get the left border going up including the \"Contents\" header.\n\n\n::: {.cell}\n\n```{.css .cell-code}\n#TableOfContents, .docs-toc-title {\n  border-left: 1px solid $sta-primary;\n  /* \"$sta-primary\" is the primary colour from the theme (sass/scss) */\n}\n```\n:::\n\n\nYou might also want to increase the width of the article container, because you now have TOC sharing the space with the article itself.\n\n\n::: {.cell}\n\n```{.css .cell-code}\n.article-container {\n  max-width: 960px;\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}