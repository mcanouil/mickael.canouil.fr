{
  "hash": "bffcc121667dfc8202f299335ae2900f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quarto Q&A: How to have labels and captions for an unknown number of tables?\"\ndescription: |\n  A small example of how to automatically have labels and captions for an unknown number of tables in Quarto, using `knitr` and R.\ndate: \"2023-03-05\"\ncategories: [Quarto, Q&A, R, knitr]\nimage: featured.png\nimage-alt: |\n  Screenshot of an html rendered by Quarto. it starts with a sentence saying below are several tables by species of penguins, followed by an item list showing the species and their respective cross-reference to the tables.\n  Tables are simply on top of each other after the item list.\n---\n\n\n\nI decided to start small blog posts with answers/solutions to questions I have seen and answered on [Twitter](https://twitter.com/), [Mastodon](https://joinmastodon.org/), and [Quarto](https://quarto.org/) GitHub [Issues](https://github.com/quarto-dev/quarto-cli/issues) & [Discussions](https://github.com/quarto-dev/quarto-cli/discussions).\n\n![](featured.png){fig-alt=\"Screenshot of an html rendered by Quarto. it starts with a sentence saying below are several tables by species of penguins, followed by an item list showing the species and their respective cross-reference to the tables. Tables are simply on top of each other after the item list.\" fig-align=\"center\"}\n\n## The Question/Problem\n\n> Suppose, in a #QuartoPub document, using #rStats I have a list of length G, each item in this list is a flextable - I need to use flextable as opposed to kable, to allow for output to docx.\n> G is unknown apriori, but will be at least 1.\n>\n> Is there any way to create a sequence of tables with associated labels and captions that could be worked out dynamically/parsed? \n> Manually, this can be done really easily (creating new labels etc) and knowing when to stop, but is there a way of automating this?\n\n_Source: <https://mastodon.ie/@DToher/109915736491084825>_\n\n## The Answer/Solution\n\nThe trick is, within a code cell with `output: asis`, to use `knitr::knit_child()` to create code cells with `label`, caption (`tbl-cap`), or whatever option you might want or need.\n\n\n\n::: {.cell .panel-tabset}\n\n## Quarto Input\n\n````md\n---\nformat: html\n---\n\n```{r}\n#| include: false\nfor (ipkg in c(\"palmerpenguins\", \"gt\", \"dplyr\")) {\n  if (!require(ipkg, character.only = TRUE)) {\n    install.packages(ipkg)\n    library(ipkg, character.only = TRUE)\n  }\n}\n```\n\nBelow are tables of the first six rows of the Palmer penguins dataset by species:\n\n```{r}\n#| echo: false\n#| output: asis\ncat(\n  sprintf(\n    \"- `%s` (@tbl-%s)\",\n    levels(penguins[[\"species\"]]),\n    levels(penguins[[\"species\"]])\n  ),\n  sep = \"\\n\"\n)\n\nfor (ispecies in levels(penguins[[\"species\"]])) {\n  tab <- penguins |>\n    filter(species %in% ispecies) |>\n    select(-species) |>\n    head() |>\n    gt() |>\n    tab_header(title = ispecies)\n  cat(sep = \"\\n\", knitr::knit_child(quiet = TRUE, text = c(\n    \"```{r}\",\n    \"#| echo: false\",\n    sprintf(\"#| tbl-cap: %s\", ispecies),\n    sprintf(\"#| label: tbl-%s\", ispecies),\n    \"tab\",\n    \"```\"\n  )))\n}\n```\n````\n\n\n\n## Quarto Output\n\n![](featured.png){fig-alt='Screenshot of an html rendered by Quarto. it starts with a sentence saying below are several tables by species of penguins, followed by an item list showing the species and their respective cross-reference to the tables.\nTables are simply on top of each other after the item list.'}\n:::\n\n\n\n## References\n\nReferences:\n\n- <https://bookdown.org/yihui/rmarkdown-cookbook/child-document.html>\n- <https://bookdown.org/yihui/rmarkdown-cookbook/knit-expand.html>\n- <https://bookdown.org/yihui/rmarkdown-cookbook/results-asis.html>\n\n## Examples\n\n- <https://github.com/quarto-dev/quarto-examples>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}